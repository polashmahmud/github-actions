name: Deploy Application

on:
  push:
    branches: [ main ]

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest
    outputs:
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}
    steps:
      - uses: actions/checkout@v2

      - name: Compile CSS and Javascript
        run: |
          npm install
          npm run prod

      - name: Configure PHP 7.4
        run: |
          sudo add-apt-repository ppa:ondrej/php
          sudo apt-get update
          sudo apt-get install -y php7.4-cli php7.4-fpm php7.4-mysql php7.4-pgsql php7.4-sqlite3 php7.4-curl php7.4-gd php7.4-intl php7.4-mbstring php7.4-xml php7.4-zip

      - name: Composer install
        run: |
          composer install --no-dev --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Create deployment artifacts
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules --exclude=tests *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v2
        with:
          name: app-deploy
          path: ${{ github.sha }}.tar.gz

      - name: Export deployment matrix
        id: export-deployment-matrix
        run: |
          JSON="$(cat ./deployment-config.json)"
          JSON="${JSON//'%'/'%25'}"
          JSON="${JSON//$'\n'/'%0A'}"
          JSON="${JSON//$'\r'/'%0D'}"
          echo "::set-output name=deployment-matrix::$JSON"

  prepare-release-on-servers:
    name: "${{ matrix.server.name }}: Prepare release"
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    strategy:
      matrix:
        server: ${{ fromJson(needs.create-deployment-artifacts.outputs.deployment-matrix) }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: app-build
      